basePath: /
consumes:
- application/json
definitions:
  GenericError:
    description: GenericError is a generic error message returned by a server
    properties:
      Message:
        type: string
    type: object
    x-go-package: github.com/undergg/go-microservices-tutorial/handlers
  Product:
    description: Product defines the structure for an API product
    properties:
      description:
        description: the description for this poduct
        maxLength: 10000
        type: string
        x-go-name: Description
      id:
        description: the id for the product
        format: int64
        minimum: 1
        type: integer
        x-go-name: ID
      name:
        description: the name for this poduct
        maxLength: 255
        type: string
        x-go-name: Name
      price:
        description: the price for the product
        format: float
        minimum: 0.01
        type: number
        x-go-name: Price
      sku:
        description: the SKU for the product
        pattern: '[a-z]+-[a-z]+-[a-z]+'
        type: string
        x-go-name: SKU
    required:
    - name
    - price
    - sku
    title: Product defines the structure for an API product.
    type: object
    x-go-package: github.com/undergg/go-microservices-tutorial/data
  Products:
    items:
      $ref: '#/definitions/Product'
    type: array
    x-go-package: github.com/undergg/go-microservices-tutorial/data
info:
  description: Documentation for Product API
  title: of Product API
  version: 1.0.0
paths:
  /products:
    get:
      operationId: listProducts
      responses:
        "200":
          $ref: '#/responses/productsResponse'
      summary: Returns a list of products.
      tags:
      - products
    post:
      operationId: addProduct
      responses:
        "201":
          $ref: '#/responses/noContentResponse'
      summary: Add a product in the database.
      tags:
      - products
  /products/{id}:
    delete:
      operationId: deleteProduct
      parameters:
      - description: The id of the product to delete from the database.
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "201":
          $ref: '#/responses/noContentResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "501":
          $ref: '#/responses/errorResponse'
      summary: Deletes a product from the database.
      tags:
      - products
    put:
      operationId: putProduct
      responses:
        "201":
          $ref: '#/responses/noContentResponse'
        "404":
          $ref: '#/responses/errorResponse'
      summary: Updates a product from the database.
      tags:
      - products
produces:
- application/json
responses:
  errorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/GenericError'
  noContentResponse: {}
  productsResponse:
    description: A list of products.
    schema:
      $ref: '#/definitions/Products'
schemes:
- http
swagger: "2.0"
